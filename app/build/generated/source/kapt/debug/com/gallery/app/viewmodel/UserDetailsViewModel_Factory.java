// Generated by Dagger (https://google.github.io/dagger).
package com.gallery.app.viewmodel;

import com.gallery.app.domain.interactor.FetchItemListUseCase;
import com.gallery.app.domain.interactor.GetItemsUseCase;
import com.gallery.app.domain.interactor.SaveItemsUseCase;
import com.gallery.app.rx.SchedulersFacade;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class UserDetailsViewModel_Factory implements Factory<UserDetailsViewModel> {
  private final Provider<GetItemsUseCase> getItemsUseCaseProvider;

  private final Provider<FetchItemListUseCase> fetchItemListUseCaseProvider;

  private final Provider<SaveItemsUseCase> saveItemsUseCaseProvider;

  private final Provider<SchedulersFacade> schedulersFacadeProvider;

  public UserDetailsViewModel_Factory(
      Provider<GetItemsUseCase> getItemsUseCaseProvider,
      Provider<FetchItemListUseCase> fetchItemListUseCaseProvider,
      Provider<SaveItemsUseCase> saveItemsUseCaseProvider,
      Provider<SchedulersFacade> schedulersFacadeProvider) {
    this.getItemsUseCaseProvider = getItemsUseCaseProvider;
    this.fetchItemListUseCaseProvider = fetchItemListUseCaseProvider;
    this.saveItemsUseCaseProvider = saveItemsUseCaseProvider;
    this.schedulersFacadeProvider = schedulersFacadeProvider;
  }

  @Override
  public UserDetailsViewModel get() {
    return provideInstance(
        getItemsUseCaseProvider,
        fetchItemListUseCaseProvider,
        saveItemsUseCaseProvider,
        schedulersFacadeProvider);
  }

  public static UserDetailsViewModel provideInstance(
      Provider<GetItemsUseCase> getItemsUseCaseProvider,
      Provider<FetchItemListUseCase> fetchItemListUseCaseProvider,
      Provider<SaveItemsUseCase> saveItemsUseCaseProvider,
      Provider<SchedulersFacade> schedulersFacadeProvider) {
    return new UserDetailsViewModel(
        getItemsUseCaseProvider.get(),
        fetchItemListUseCaseProvider.get(),
        saveItemsUseCaseProvider.get(),
        schedulersFacadeProvider.get());
  }

  public static UserDetailsViewModel_Factory create(
      Provider<GetItemsUseCase> getItemsUseCaseProvider,
      Provider<FetchItemListUseCase> fetchItemListUseCaseProvider,
      Provider<SaveItemsUseCase> saveItemsUseCaseProvider,
      Provider<SchedulersFacade> schedulersFacadeProvider) {
    return new UserDetailsViewModel_Factory(
        getItemsUseCaseProvider,
        fetchItemListUseCaseProvider,
        saveItemsUseCaseProvider,
        schedulersFacadeProvider);
  }

  public static UserDetailsViewModel newUserDetailsViewModel(
      GetItemsUseCase getItemsUseCase,
      FetchItemListUseCase fetchItemListUseCase,
      SaveItemsUseCase saveItemsUseCase,
      SchedulersFacade schedulersFacade) {
    return new UserDetailsViewModel(
        getItemsUseCase, fetchItemListUseCase, saveItemsUseCase, schedulersFacade);
  }
}
