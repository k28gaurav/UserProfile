// Generated by Dagger (https://google.github.io/dagger).
package com.gallery.app.domain.interactor;

import com.gallery.app.domain.repository.UserRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class FetchItemListUseCase_Factory implements Factory<FetchItemListUseCase> {
  private final Provider<UserRepository> userRepositoryProvider;

  public FetchItemListUseCase_Factory(Provider<UserRepository> userRepositoryProvider) {
    this.userRepositoryProvider = userRepositoryProvider;
  }

  @Override
  public FetchItemListUseCase get() {
    return provideInstance(userRepositoryProvider);
  }

  public static FetchItemListUseCase provideInstance(
      Provider<UserRepository> userRepositoryProvider) {
    return new FetchItemListUseCase(userRepositoryProvider.get());
  }

  public static FetchItemListUseCase_Factory create(
      Provider<UserRepository> userRepositoryProvider) {
    return new FetchItemListUseCase_Factory(userRepositoryProvider);
  }

  public static FetchItemListUseCase newFetchItemListUseCase(UserRepository userRepository) {
    return new FetchItemListUseCase(userRepository);
  }
}
