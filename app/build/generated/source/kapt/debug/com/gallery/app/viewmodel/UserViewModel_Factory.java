// Generated by Dagger (https://google.github.io/dagger).
package com.gallery.app.viewmodel;

import com.gallery.app.rx.SchedulersFacade;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class UserViewModel_Factory implements Factory<UserViewModel> {
  private final Provider<SchedulersFacade> schedulersFacadeProvider;

  public UserViewModel_Factory(Provider<SchedulersFacade> schedulersFacadeProvider) {
    this.schedulersFacadeProvider = schedulersFacadeProvider;
  }

  @Override
  public UserViewModel get() {
    return provideInstance(schedulersFacadeProvider);
  }

  public static UserViewModel provideInstance(Provider<SchedulersFacade> schedulersFacadeProvider) {
    return new UserViewModel(schedulersFacadeProvider.get());
  }

  public static UserViewModel_Factory create(Provider<SchedulersFacade> schedulersFacadeProvider) {
    return new UserViewModel_Factory(schedulersFacadeProvider);
  }

  public static UserViewModel newUserViewModel(SchedulersFacade schedulersFacade) {
    return new UserViewModel(schedulersFacade);
  }
}
